---
import type { Props } from "@astrojs/starlight/props";
import StarlightHead from "@astrojs/starlight/components/Head.astro";
import VtbotStarlight from "astro-vtbot/components/starlight/Base.astro";
import ProgressBar from "astro-vtbot/components/ProgressBar.astro";
import PageOffset from "astro-vtbot/components/PageOffset.astro";
import PageOrder from "astro-vtbot/components/starlight/PageOrder.astro";
import AutoNameSelected from "astro-vtbot/components/AutoNameSelected.astro";
import BorderControl from "astro-vtbot/components/BorderControl.astro";
---

{/* Define a view transition animation for `<main>`*/}
<VtbotStarlight
  {...Astro.props}
  transition:name="main" transition:animate={{
    forwards: {
      old: { name: "forwardsSwingOut", duration: 150, easing: "ease-in-out" },
      new: { name: "forwardsSwingIn", duration: 150, easing: "ease-in-out" },
    },
    backwards: {
      old: { name: "backwardsSwingOut", duration: 150, easing: "ease-in-out" },
      new: { name: "backwardsSwingIn", duration: 150, easing: "ease-in-out" },
    },
  }}
>
  <StarlightHead {...Astro.props}><slot /></StarlightHead>
</VtbotStarlight>

{/* As an alterative to the LoadingIndicator: */}
<ProgressBar />
<style is:global>
  .swup-progress-bar {
    background: linear-gradient(
      to bottom,
      var(--sl-color-accent),
      var(--sl-color-accent-high),
      var(--sl-color-accent)
    );
    height: 5px;
  }
	@keyframes forwardsSwingOut {
		0% {
			transform: translateX(0);
		}
		100% {
			transform: translateX(-100%);
		}
	}
	@keyframes forwardsSwingIn {
		0% {
			transform: translateX(100%);
		}
		100% {
			transform: translateX(0);
		}
	}
	@keyframes backwardsSwingOut {
		0% {
			transform: translateX(0);
		}
		100% {
			transform: translateX(100%);
		}
	}
	@keyframes backwardsSwingIn {
		0% {
			transform: translateX(-100%);
		}
		100% {
			transform: translateX(0);
		}
	}
	::view-transition-image-pair(main) {
		overflow: hidden;
	}

</style>

{/* Decent transitions for scrolled down pages */}
<PageOffset name="main" />

{/* Make animation direction based on the order of the pages in the sidebar */}
<PageOrder />

{
  /* Without further configuration, make headings stand out during view transitions.
    Can be used to declaratively add view transition names which open a door to all kinds of funny thing. */
}
<AutoNameSelected />

<BorderControl fence={{ outside: ["/demo/"] }} />

