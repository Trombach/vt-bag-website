---
import type { Props } from "@astrojs/starlight/props";
import StarlightHead from "@astrojs/starlight/components/Head.astro";
import turnSignal from "@vtbag/turn-signal?url";
import camShaft from "@vtbag/cam-shaft?url";
import "./vtbag-bar.css";
---

<StarlightHead {...Astro.props}><slot /></StarlightHead>

{/* Decent transitions for scrolled down pages */}
<script is:inline src={camShaft}></script>

{/* Make animation direction based on the order of the pages in the sidebar */}
<script is:inline src={turnSignal} data-selector="nav.sidebar li a"></script>

{
  /* Make headings stand out during view transitions. Can be used to declaratively add view transition names which open a door to all kinds of funny thing. */
}
<script is:inline>
  ["pageswap", "pagereveal"].forEach((eventName) =>
    addEventListener(
      eventName,
      (event) =>
        event.viewTransition &&
        document
          .querySelectorAll("h2, h3")
          .forEach((heading, index) => (heading.style.viewTransitionName = `vtbag-h-${index}`))
    )
  );
</script>

<style is:global>
  @view-transition {
    navigation: auto;
  }
  main {
    view-transition-name: main;
  }
  ::view-transition-old(main) {
    animation: forwardsSwingOut 400ms ease-in-out;
  }
  ::view-transition-new(main) {
    animation: forwardsSwingIn 400ms ease-in-out;
  }
  :active-view-transition-type(backward)::view-transition-old(main) {
    animation: backwardsSwingOut 400ms ease-in-out;
  }
  :active-view-transition-type(backward)::view-transition-new(main) {
    animation: backwardsSwingIn 400ms ease-in-out;
  }
  :active-view-transition-type(same)::view-transition-old(main) {
    animation: shake-old 400ms ease-in-out;
  }
  :active-view-transition-type(same)::view-transition-new(main) {
    animation: shake-new 400ms ease-in-out;
  }
  @keyframes forwardsSwingOut {
    0% {
      transform: translateX(0);
      opacity: 1;
    }
    100% {
      transform: translateX(-100%);
      opacity: 0;
    }
  }
  @keyframes forwardsSwingIn {
    0% {
      transform: translateX(100%);
      opacity: 0;
    }
    100% {
      transform: translateX(0);
      opacity: 1;
    }
  }
  @keyframes backwardsSwingOut {
    0% {
      transform: translateX(0);
      opacity: 1;
    }
    100% {
      transform: translateX(100%);
      opacity: 0;
    }
  }
  @keyframes backwardsSwingIn {
    0% {
      transform: translateX(-100%);
      opacity: 0;
    }
    100% {
      transform: translateX(0);
      opacity: 1;
    }
  }
  @keyframes shake-old {
    25% {
      transform: rotateZ(-2deg);
    }
    50% {
      transform: rotateZ(0deg);
      opacity: 0.5;
    }
    51%, 100% {
      opacity: 0;
    }
  }
  @keyframes shake-new {
    0%, 49% {
      opacity: 0;
    }
    50% {
      transform: rotateZ(0deg);
      opacity: 0.5;
    }
    75% {
      transform: rotateZ(2deg);
      opacity: 1;
    }
  }
  ::view-transition-image-pair(main) {
    overflow: hidden;
  }
</style>
